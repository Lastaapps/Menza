[versions]
aboutLibraries = "10.10.0"
android-gradle = "8.2.1"
androidx-activity = "1.8.2"
androidx-compose = "1.6.0-rc01"
# @keep
androidx-compose-compiler = "1.5.8"
androidx-compose-material = "1.6.0-rc01"
androidx-compose-material3 = "1.2.0-beta02"
androidx-lifecycle = "2.7.0"
androidx-navigation = "2.7.6"
androidx-room = "2.6.1"
androidx-security = "1.1.0-alpha06"
androidx-test = "1.5.0"
coil = "2.5.0"
decompose = "3.0.0-alpha04"
detekt = "1.23.4"
espresso = "3.5.1"
google-ksp = "1.9.22-1.0.16"
# @keep
java-jvmTarget = "11"
junit5-bom = "5.10.1"
kermit = "2.0.2"
koin = "3.5.3"
koin-annotations = "1.0.3"
kotest = "5.8.0"
kotlin = "1.9.22"
# @keep
kotlin-api = "2.0"
# @keep
kotlin-language = "2.0"
kotlinx-atomicfu = "0.23.1"
kotlinx-coroutines = "1.7.3"
ktlint = "11.6.0"
ktor = "2.3.7"
russhwolf-settings = "1.1.1"
sdk-compile = "34"
sdk-min = "21"
sdk-target = "34"
shadow = "8.1.1"
sqldelight = "2.0.1"

[libraries]
aboutLibraries-compose = { module = "com.mikepenz:aboutlibraries-compose", version.ref = "aboutLibraries" }
aboutLibraries-core = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutLibraries" }
android-desugaring = "com.android.tools:desugar_jdk_libs:2.0.4"
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-activity-core = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-annotation = "androidx.annotation:annotation:1.7.1"
androidx-appcompat = "androidx.appcompat:appcompat:1.7.0-alpha03"
androidx-collection = "androidx.collection:collection:1.3.0"
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "androidx-compose" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidx-compose-compiler" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose" }
androidx-compose-iconsCore = { module = "androidx.compose.material:material-icons-core", version.ref = "androidx-compose-material" }
androidx-compose-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidx-compose-material" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose-material" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-compose-material3" }
androidx-compose-material3WindowSizeClass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "androidx-compose-material3" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidx-compose" }
androidx-compose-testJUnit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose" }
androidx-compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-toolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "androidx-compose" }
androidx-constraintlayout-compose = "androidx.constraintlayout:constraintlayout-compose:1.0.1"
androidx-constraintlayout-views = "androidx.constraintlayout:constraintlayout:2.1.4"
androidx-core = "androidx.core:core-ktx:1.12.0"
androidx-datastore = "androidx.datastore:datastore-preferences:1.0.0"
androidx-documentFile = "androidx.documentfile:documentfile:1.0.1"
androidx-emoji2-core = "androidx.emoji2:emoji2:1.4.0"
androidx-fragment = "androidx.fragment:fragment-ktx:1.6.2"
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel-savedState = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }
androidx-preferences = "androidx.preference:preference-ktx:1.2.1"
androidx-recyclerView = "androidx.recyclerview:recyclerview:1.3.2"
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-test = { module = "androidx.room:room-testing", version.ref = "androidx-room" }
androidx-security = { module = "androidx.security:security-crypto-ktx", version.ref = "androidx-security" }
androidx-splashscreen = "androidx.core:core-splashscreen:1.0.1"
androidx-startup = "androidx.startup:startup-runtime:1.1.1"
androidx-swipeRefreshLayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-junit = "androidx.test.ext-ktx:junit:1.1.3"
androidx-test-rules = { module = "androidx.test:rules-ktx", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner-ktx", version.ref = "androidx-test" }
androidx-test-truth = { module = "androidx.test.ext:truth-ktx", version.ref = "androidx-test" }
androidx-tracing = "androidx.tracing:tracing-ktx:1.2.0"
androidx-vectorDrawables = "androidx.vectordrawable:vectordrawable:1.1.0"
androidx-windowManager = "androidx.window:window:1.2.0"
androidx-work = "androidx.work:work-runtime-ktx:2.9.0"
arrowkt-bom = "io.arrow-kt:arrow-stack:1.2.1"
arrowkt-core = { module = "io.arrow-kt:arrow-core" }
arrowkt-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines" }
arrowkt-fx-stm = { module = "io.arrow-kt:arrow-fx-stm" }
coil-base = { module = "io.coil-kt:coil-base", version.ref = "coil" }
coil-composeBase = { module = "io.coil-kt:coil-compose-base", version.ref = "coil" }
coil-composeComplete = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-core = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
coil-video = { module = "io.coil-kt:coil-video", version.ref = "coil" }
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
detekt-kode-compose = "ru.kode:detekt-rules-compose:1.3.0"
detekt-twitter-compose = "com.twitter.compose.rules:detekt:0.0.26"
espresso-accessibility = { module = "androidx.test.espresso:espresso-accessibility", version.ref = "espresso" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espresso" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-idlingConcurrent = { module = "androidx.test.espresso.idling:idling-concurrent", version.ref = "espresso" }
espresso-idlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espresso" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso" }
espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "espresso" }
fluidLocale = "io.fluidsonic.locale:fluid-locale:0.13.0"
google-material = "com.google.android.material:material:1.11.0"
gradlePlugins-android = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradlePlugins-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugins-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
gradlePlugins-shadow = { module = "gradle.plugin.com.github.johnrengelman:shadow", version.ref = "shadow" }
junit5-bom = { module = "org.junit:junit-bom", version.ref = "junit5-bom" }
junit5-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit5-jupiter-runtime = { module = "org.junit.jupiter:junit-jupiter-engine" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
koin-android-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-android-core = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-navigation = { module = "io.insert-koin:koin-androidx-navigation", version.ref = "koin" }
koin-android-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-annotations-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktorServer = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-ktorServer-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
koin-test-core = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-jUnit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
koin-test-jUnit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
kotest-assertion = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-jUnit5runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-common = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlin-standardLib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-test-annotation = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common" }
kotlin-test-core = { module = "org.jetbrains.kotlin:kotlin-test" }
kotlin-test-jUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit" }
kotlin-test-jUnit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-collection = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7"
kotlinx-dateTime = "org.jetbrains.kotlinx:kotlinx-datetime:0.5.0"
kotlinx-serializationJson = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2"
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-autoHeadResponse = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-caching = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-callLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-conditionalsHeaders = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-defaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-forwardedHeaders = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-httpRedirect = { module = "io.ktor:ktor-server-http-redirect", version.ref = "ktor" }
ktor-server-jsonSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-partialContent = { module = "io.ktor:ktor-server-partial-content", version.ref = "ktor" }
ktor-server-sesstions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-unofficial-apiKeyAuth = "dev.forst:ktor-api-key:2.1.0"
russhwolf-settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "russhwolf-settings" }
russhwolf-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "russhwolf-settings" }
russhwolf-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "russhwolf-settings" }
russhwolf-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "russhwolf-settings" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-plugin = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }

[bundles]
ktor-client = [
    "ktor-client-auth",
    "ktor-client-contentNegotiation",
    "ktor-client-core",
    "ktor-client-encoding",
    "ktor-client-logging",
    "ktor-client-serialization",
]
ktor-server = [
    "ktor-server-auth",
    "ktor-server-autoHeadResponse",
    "ktor-server-caching",
    "ktor-server-callLogging",
    "ktor-server-compression",
    "ktor-server-conditionalsHeaders",
    "ktor-server-contentNegotiation",
    "ktor-server-core",
    "ktor-server-defaultHeaders",
    "ktor-server-forwardedHeaders",
    "ktor-server-httpRedirect",
    "ktor-server-jsonSerialization",
    "ktor-server-partialContent",
    "ktor-server-sesstions",
    "ktor-server-statusPages",
    "ktor-server-unofficial-apiKeyAuth",
]
russhwolf-settings = [
    "russhwolf-settings-core",
    "russhwolf-settings-coroutines",
    "russhwolf-settings-datastore",
    "russhwolf-settings-serialization",
]
sqldelight = [
    "sqldelight-android",
    "sqldelight-coroutines",
    "sqldelight-jvm",
    "sqldelight-runtime",
]

[plugins]
aboutLibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutLibraries" }
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }
benNamesVersions = "com.github.ben-manes.versions:0.50.0"
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "google-ksp" }
java-kotlin = { id = "kotlin" }
java-library = { id = "java-library" }
kapt = "org.jetbrains.kotlin:kotlin-kapt"
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
lastaapps-android-app-compose = "android-app-compose-convention:none"
lastaapps-android-app-core = "android-app-convention:none"
lastaapps-android-library-compose = "android-library-compose-convention:none"
lastaapps-android-library-core = "android-library-convention:none"
lastaapps-jvm-app = "jvm-app-convention:none"
lastaapps-kmp-library = "kmp-library-convention:none"
lastaapps-kmp-sqldelight = "kmp-sqldelight-convention:none"
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
versionCatalogUpdate = "nl.littlerobots.version-catalog-update:0.8.1"
